{"ast":null,"code":"var _jsxFileName = \"/Users/samelder/Documents/ai-logger/frontend/src/components/SystemMonitoring.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './SystemMonitoring.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SystemMonitoring = () => {\n  _s();\n  const [metrics, setMetrics] = useState(null);\n  const [history, setHistory] = useState([]);\n  const [systemInfo, setSystemInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    Promise.all([fetchMetrics(), fetchHistory(), fetchSystemInfo()]).then(() => {\n      // Set up auto-refresh every 10 seconds\n      const interval = setInterval(() => {\n        fetchMetrics();\n        // Refresh history less frequently\n        if (Math.random() < 0.3) fetchHistory();\n      }, 10000);\n      return () => clearInterval(interval);\n    });\n  }, []);\n  const fetchMetrics = async () => {\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:5000/api/monitoring/metrics');\n      setMetrics(response.data);\n    } catch (err) {\n      console.error('Error fetching metrics:', err);\n      setError('Failed to fetch system metrics');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchHistory = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/monitoring/history', {\n        params: {\n          count: 30\n        }\n      });\n      setHistory(response.data.metrics || []);\n    } catch (err) {\n      console.error('Error fetching metrics history:', err);\n    }\n  };\n  const fetchSystemInfo = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/monitoring/system');\n      setSystemInfo(response.data);\n    } catch (err) {\n      console.error('Error fetching system info:', err);\n    }\n  };\n  const formatBytes = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const getStatusColor = percent => {\n    if (percent >= 90) return '#dc3545'; // Danger\n    if (percent >= 70) return '#ffc107'; // Warning\n    return '#28a745'; // Good\n  };\n  const renderMetricCard = (title, value, unit, percent = null, icon = null) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-card\",\n      children: [icon && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-icon\",\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-value\",\n        children: [value, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-unit\",\n          children: unit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), percent !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${percent}%`,\n              backgroundColor: getStatusColor(percent)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-text\",\n          children: [percent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  };\n  const renderSystemInfo = () => {\n    if (!systemInfo) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"system-info-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"System Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"system-info-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-label\",\n            children: \"Hostname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-value\",\n            children: systemInfo.hostname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-label\",\n            children: \"Platform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-value\",\n            children: systemInfo.platform\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-label\",\n            children: \"CPU Cores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-value\",\n            children: systemInfo.cpu_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-label\",\n            children: \"Total Memory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-value\",\n            children: formatBytes(systemInfo.memory_total)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-label\",\n            children: \"Python Version\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-value\",\n            children: systemInfo.python_version\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  };\n  const renderCurrentMetrics = () => {\n    if (!metrics) return null;\n    const systemMetrics = metrics.system;\n    const appMetrics = metrics.application;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-metrics-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current System Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics-grid\",\n        children: [renderMetricCard('CPU Usage', systemMetrics.cpu_percent, '%', systemMetrics.cpu_percent, '💻'), renderMetricCard('Memory Usage', systemMetrics.memory_percent, '%', systemMetrics.memory_percent, '🧠'), renderMetricCard('Disk Usage', systemMetrics.disk_percent, '%', systemMetrics.disk_percent, '💾'), renderMetricCard('Memory Available', formatBytes(systemMetrics.memory_available), '', null, '📊'), renderMetricCard('Network Sent', formatBytes(systemMetrics.network_bytes_sent), '', null, '📤'), renderMetricCard('Network Received', formatBytes(systemMetrics.network_bytes_recv), '', null, '📥')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Application Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics-grid\",\n        children: [renderMetricCard('App CPU Usage', appMetrics.process_cpu_percent, '%', appMetrics.process_cpu_percent, '⚙️'), renderMetricCard('App Memory', formatBytes(appMetrics.process_memory_rss), '', null, '📈'), renderMetricCard('Threads', appMetrics.process_threads, '', null, '🧵'), renderMetricCard('Connections', appMetrics.process_connections, '', null, '🔌')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  };\n  const renderMetricsHistory = () => {\n    if (history.length === 0) return null;\n\n    // Chart data preparation would go here in a real implementation\n    // For now, we'll just show a simple text representation\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-history-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Metrics History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"History data available for \", history.length, \" data points.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Latest readings:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: history.slice(0, 3).map((point, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [new Date(point.timestamp).toLocaleTimeString(), \": CPU \", point.system.cpu_percent, \"%, Memory \", point.system.memory_percent, \"%, Disk \", point.system.disk_percent, \"%\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"note\",\n          children: \"Note: In a production environment, this would display interactive charts showing trends over time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"system-monitoring\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"System Monitoring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), loading && !metrics && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading system metrics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 31\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }, this), systemInfo && renderSystemInfo(), metrics && renderCurrentMetrics(), history.length > 0 && renderMetricsHistory(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"refresh-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setLoading(true);\n          Promise.all([fetchMetrics(), fetchHistory()]).finally(() => setLoading(false));\n        },\n        children: \"Refresh Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(SystemMonitoring, \"epqpKBQGzVwbxItpBWMweFkqevo=\");\n_c = SystemMonitoring;\nexport default SystemMonitoring;\nvar _c;\n$RefreshReg$(_c, \"SystemMonitoring\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SystemMonitoring","_s","metrics","setMetrics","history","setHistory","systemInfo","setSystemInfo","loading","setLoading","error","setError","Promise","all","fetchMetrics","fetchHistory","fetchSystemInfo","then","interval","setInterval","Math","random","clearInterval","response","get","data","err","console","params","count","formatBytes","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","getStatusColor","percent","renderMetricCard","title","value","unit","icon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","backgroundColor","renderSystemInfo","hostname","platform","cpu_count","memory_total","python_version","renderCurrentMetrics","systemMetrics","system","appMetrics","application","cpu_percent","memory_percent","disk_percent","memory_available","network_bytes_sent","network_bytes_recv","process_cpu_percent","process_memory_rss","process_threads","process_connections","renderMetricsHistory","length","slice","map","point","index","Date","timestamp","toLocaleTimeString","onClick","finally","_c","$RefreshReg$"],"sources":["/Users/samelder/Documents/ai-logger/frontend/src/components/SystemMonitoring.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './SystemMonitoring.css';\n\nconst SystemMonitoring = () => {\n  const [metrics, setMetrics] = useState(null);\n  const [history, setHistory] = useState([]);\n  const [systemInfo, setSystemInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    Promise.all([\n      fetchMetrics(),\n      fetchHistory(),\n      fetchSystemInfo()\n    ]).then(() => {\n      // Set up auto-refresh every 10 seconds\n      const interval = setInterval(() => {\n        fetchMetrics();\n        // Refresh history less frequently\n        if (Math.random() < 0.3) fetchHistory();\n      }, 10000);\n      return () => clearInterval(interval);\n    });\n  }, []);\n\n  const fetchMetrics = async () => {\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:5000/api/monitoring/metrics');\n      setMetrics(response.data);\n    } catch (err) {\n      console.error('Error fetching metrics:', err);\n      setError('Failed to fetch system metrics');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchHistory = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/monitoring/history', {\n        params: { count: 30 }\n      });\n      setHistory(response.data.metrics || []);\n    } catch (err) {\n      console.error('Error fetching metrics history:', err);\n    }\n  };\n\n  const fetchSystemInfo = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/monitoring/system');\n      setSystemInfo(response.data);\n    } catch (err) {\n      console.error('Error fetching system info:', err);\n    }\n  };\n\n  const formatBytes = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const getStatusColor = (percent) => {\n    if (percent >= 90) return '#dc3545'; // Danger\n    if (percent >= 70) return '#ffc107'; // Warning\n    return '#28a745'; // Good\n  };\n\n  const renderMetricCard = (title, value, unit, percent = null, icon = null) => {\n    return (\n      <div className=\"metric-card\">\n        {icon && <div className=\"metric-icon\">{icon}</div>}\n        <div className=\"metric-title\">{title}</div>\n        <div className=\"metric-value\">\n          {value} <span className=\"metric-unit\">{unit}</span>\n        </div>\n        {percent !== null && (\n          <div className=\"metric-progress\">\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-fill\" \n                style={{ \n                  width: `${percent}%`,\n                  backgroundColor: getStatusColor(percent)\n                }}\n              ></div>\n            </div>\n            <div className=\"progress-text\">{percent}%</div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderSystemInfo = () => {\n    if (!systemInfo) return null;\n\n    return (\n      <div className=\"system-info-section\">\n        <h3>System Information</h3>\n        <div className=\"system-info-cards\">\n          <div className=\"info-card\">\n            <div className=\"info-label\">Hostname</div>\n            <div className=\"info-value\">{systemInfo.hostname}</div>\n          </div>\n          <div className=\"info-card\">\n            <div className=\"info-label\">Platform</div>\n            <div className=\"info-value\">{systemInfo.platform}</div>\n          </div>\n          <div className=\"info-card\">\n            <div className=\"info-label\">CPU Cores</div>\n            <div className=\"info-value\">{systemInfo.cpu_count}</div>\n          </div>\n          <div className=\"info-card\">\n            <div className=\"info-label\">Total Memory</div>\n            <div className=\"info-value\">{formatBytes(systemInfo.memory_total)}</div>\n          </div>\n          <div className=\"info-card\">\n            <div className=\"info-label\">Python Version</div>\n            <div className=\"info-value\">{systemInfo.python_version}</div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderCurrentMetrics = () => {\n    if (!metrics) return null;\n\n    const systemMetrics = metrics.system;\n    const appMetrics = metrics.application;\n\n    return (\n      <div className=\"current-metrics-section\">\n        <h3>Current System Metrics</h3>\n        <div className=\"metrics-grid\">\n          {renderMetricCard(\n            'CPU Usage',\n            systemMetrics.cpu_percent,\n            '%',\n            systemMetrics.cpu_percent,\n            '💻'\n          )}\n          {renderMetricCard(\n            'Memory Usage',\n            systemMetrics.memory_percent,\n            '%',\n            systemMetrics.memory_percent,\n            '🧠'\n          )}\n          {renderMetricCard(\n            'Disk Usage',\n            systemMetrics.disk_percent,\n            '%',\n            systemMetrics.disk_percent,\n            '💾'\n          )}\n          {renderMetricCard(\n            'Memory Available',\n            formatBytes(systemMetrics.memory_available),\n            '',\n            null,\n            '📊'\n          )}\n          {renderMetricCard(\n            'Network Sent',\n            formatBytes(systemMetrics.network_bytes_sent),\n            '',\n            null,\n            '📤'\n          )}\n          {renderMetricCard(\n            'Network Received',\n            formatBytes(systemMetrics.network_bytes_recv),\n            '',\n            null,\n            '📥'\n          )}\n        </div>\n\n        <h3>Application Metrics</h3>\n        <div className=\"metrics-grid\">\n          {renderMetricCard(\n            'App CPU Usage',\n            appMetrics.process_cpu_percent,\n            '%',\n            appMetrics.process_cpu_percent,\n            '⚙️'\n          )}\n          {renderMetricCard(\n            'App Memory',\n            formatBytes(appMetrics.process_memory_rss),\n            '',\n            null,\n            '📈'\n          )}\n          {renderMetricCard(\n            'Threads',\n            appMetrics.process_threads,\n            '',\n            null,\n            '🧵'\n          )}\n          {renderMetricCard(\n            'Connections',\n            appMetrics.process_connections,\n            '',\n            null,\n            '🔌'\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const renderMetricsHistory = () => {\n    if (history.length === 0) return null;\n\n    // Chart data preparation would go here in a real implementation\n    // For now, we'll just show a simple text representation\n\n    return (\n      <div className=\"metrics-history-section\">\n        <h3>Metrics History</h3>\n        <div className=\"history-preview\">\n          <p>History data available for {history.length} data points.</p>\n          <p>Latest readings:</p>\n          <ul>\n            {history.slice(0, 3).map((point, index) => (\n              <li key={index}>\n                {new Date(point.timestamp).toLocaleTimeString()}: \n                CPU {point.system.cpu_percent}%, \n                Memory {point.system.memory_percent}%, \n                Disk {point.system.disk_percent}%\n              </li>\n            ))}\n          </ul>\n          <p className=\"note\">\n            Note: In a production environment, this would display interactive charts \n            showing trends over time.\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"system-monitoring\">\n      <h2>System Monitoring</h2>\n      \n      {loading && !metrics && <div className=\"loading\">Loading system metrics...</div>}\n      {error && <div className=\"error\">{error}</div>}\n      \n      {systemInfo && renderSystemInfo()}\n      {metrics && renderCurrentMetrics()}\n      {history.length > 0 && renderMetricsHistory()}\n      \n      <div className=\"refresh-controls\">\n        <button onClick={() => {\n          setLoading(true);\n          Promise.all([fetchMetrics(), fetchHistory()]).finally(() => setLoading(false));\n        }}>\n          Refresh Metrics\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SystemMonitoring; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}